{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.23.1.45101",
      "templateHash": "7786926509995005352"
    }
  },
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "defaultValue": "gechologstorage",
      "metadata": {
        "description": "Storage Account Name"
      }
    },
    "confFileShareName": {
      "type": "string",
      "defaultValue": "conf",
      "metadata": {
        "description": "Config file share"
      }
    },
    "logFileShareName": {
      "type": "string",
      "defaultValue": "log",
      "metadata": {
        "description": "Log file share"
      }
    },
    "logSpaceName": {
      "type": "string",
      "defaultValue": "gechologspace",
      "metadata": {
        "description": "Log Space name"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "PerGB2018",
      "metadata": {
        "description": "sku"
      }
    },
    "aiServiceApiBase": {
      "type": "string",
      "metadata": {
        "description": "URL of the AI Service API"
      }
    },
    "name": {
      "type": "string",
      "defaultValue": "gecholog",
      "metadata": {
        "description": "Name for the container group"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "image": {
      "type": "string",
      "defaultValue": "gecholog/gechologpreview:latest",
      "metadata": {
        "description": "Container image to deploy. Should be of the form repoName/imagename:tag for images stored in public Docker Hub, or a fully qualified URI for other registries. Images from private registries require additional registry credentials."
      }
    },
    "port": {
      "type": "int",
      "defaultValue": 5380,
      "metadata": {
        "description": "Port to open on the container and the public IP address."
      }
    },
    "cpuCores": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of CPU cores to allocate to the container."
      }
    },
    "memoryInGb": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The amount of memory to allocate to the container in gigabytes."
      }
    },
    "restartPolicy": {
      "type": "string",
      "defaultValue": "Always",
      "allowedValues": [
        "Always",
        "Never",
        "OnFailure"
      ],
      "metadata": {
        "description": "The behavior of Azure runtime if container has stopped."
      }
    },
    "workbookDisplayName": {
      "type": "string",
      "defaultValue": "gecholog Analytics E1",
      "metadata": {
        "description": "The friendly name for the workbook that is used in the Gallery or Saved List.  This name must be unique within a resource group."
      }
    },
    "workbookType": {
      "type": "string",
      "defaultValue": "workbook",
      "metadata": {
        "description": "The gallery that the workbook will been shown under. Supported values include workbook, tsg, etc. Usually, this is 'workbook'"
      }
    },
    "workbookId": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "metadata": {
        "description": "The unique guid for this workbook instance"
      }
    }
  },
  "variables": {
    "rawSerializedDataStr": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"f134fe05-cee2-486d-b05e-c076f7cc4b0c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Router\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"gecholog_CL\\n| distinct request_gl_path_s\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]},{\"id\":\"ad6a2776-46a7-4d13-8ab4-517863acfe1c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"HeaderPrompt\",\"type\":9,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"gecholog_CL\\n| distinct request_ingress_headers_Prompt_s\",\"timeContext\":{\"durationMs\":172800000},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"\",\"[\\\"testprompt2\\\"]\",\"[\\\"testprompt1\\\"]\"]},{\"id\":\"499523ea-2721-4db9-b1dc-6cec7e0f434c\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Deployment\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"gecholog_CL\\n|Â distinct request_ingress_subpath_s\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"timeContext\":{\"durationMs\":172800000},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"value\":[\"value::all\"]}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let pathValues = dynamic([{Router}]);\\nlet promptValues = dynamic([{HeaderPrompt}]);\\nlet deploymentValues = dynamic([{Deployment}]);\\ngecholog_CL\\n| where (request_gl_path_s in (pathValues) or pathValues[0] == \\\"All\\\")\\n| where (request_ingress_headers_Prompt_s in (promptValues) or promptValues[0] == \\\"All\\\")\\n| where (request_ingress_subpath_s in (deploymentValues) or deploymentValues[0] == \\\"All\\\")\\n| summarize \\n    AvgPromptTokens = round(avg(toreal(response_token_count_prompt_tokens_d)), 1), \\n    AvgCompletionTokens = round(avg(toreal(response_token_count_completion_tokens_d)), 1), \\n    AvgTotalTokens = round(avg(toreal(response_token_count_total_tokens_d)), 1)\\n\\n\\n\\n\\n\\n\\n\\n\",\"size\":4,\"timeContext\":{\"durationMs\":172800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"tileSettings\":{\"showBorder\":false}},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let pathValues = dynamic([{Router}]);\\nlet promptValues = dynamic([{HeaderPrompt}]);\\nlet deploymentValues = dynamic([{Deployment}]);\\ngecholog_CL\\n| where (request_gl_path_s in (pathValues) or pathValues[0] == \\\"All\\\")\\n| where (request_ingress_headers_Prompt_s in (promptValues) or promptValues[0] == \\\"All\\\")\\n| where (request_ingress_subpath_s in (deploymentValues) or deploymentValues[0] == \\\"All\\\")\\n| extend IngressEgressTime = todatetime(ingress_egress_timer_start_s) // Parse the string to datetime\\n| summarize \\n    TotalPromptTokens = sum(toreal(response_token_count_prompt_tokens_d)), \\n    TotalCompletionTokens = sum(toreal(response_token_count_completion_tokens_d))\\n    by IngressEgressTime // Use the parsed datetime column\\n| project TimeGenerated = IngressEgressTime, TotalPromptTokens, TotalCompletionTokens // Rename the column for consistency\\n| render columnchart with (kind=stacked, title=\\\"Token Count Over Time\\\", xcolumn=TimeGenerated, ycolumns=TotalPromptTokens, TotalCompletionTokens, ytitle=\\\"Total Tokens\\\", xtitle=\\\"Time\\\")\\n\\n\\n\",\"size\":0,\"timeContext\":{\"durationMs\":14400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"tileSettings\":{\"showBorder\":false},\"graphSettings\":{\"type\":0}},\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"gecholog_CL\\n| getschema\",\"size\":0,\"timeContext\":{\"durationMs\":86400000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 3\"}],\"isLocked\":false,\"fallbackResourceIds\":[\"/subscriptions/aa1fa7e2-6d38-4266-bf49-8025e5f723e9/resourceGroups/gltest/providers/Microsoft.OperationalInsights/workspaces/glogspace\"]}",
    "serializedDataString": "[replace(variables('rawSerializedDataStr'), '/subscriptions/aa1fa7e2-6d38-4266-bf49-8025e5f723e9/resourceGroups/gltest/providers/Microsoft.OperationalInsights/workspaces/glogspace', resourceId('Microsoft.OperationalInsights/workspaces', parameters('logSpaceName')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('confFileShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('logFileShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[parameters('logSpaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('sku')]"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/workbooks",
      "apiVersion": "2022-04-01",
      "name": "[parameters('workbookId')]",
      "location": "[parameters('location')]",
      "kind": "shared",
      "properties": {
        "displayName": "[parameters('workbookDisplayName')]",
        "serializedData": "[variables('serializedDataString')]",
        "version": "1.0",
        "sourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logSpaceName'))]",
        "category": "[parameters('workbookType')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logSpaceName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-09-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "properties": {
        "containers": [
          {
            "name": "[parameters('name')]",
            "properties": {
              "image": "[parameters('image')]",
              "ports": [
                {
                  "port": "[parameters('port')]",
                  "protocol": "TCP"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "[parameters('cpuCores')]",
                  "memoryInGB": "[parameters('memoryInGb')]"
                }
              },
              "environmentVariables": [
                {
                  "name": "AISERVICE_API_BASE",
                  "value": "[parameters('aiServiceApiBase')]"
                },
                {
                  "name": "AZURE_LOG_ANALYTICS_WORKSPACE_ID",
                  "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logSpaceName')), '2021-06-01').customerId]"
                },
                {
                  "name": "AZURE_LOG_ANALYTICS_SHARED_KEY",
                  "secureValue": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logSpaceName')), '2021-06-01').primarySharedKey]"
                },
                {
                  "name": "AZURE_STORAGE_ACCESS_KEY",
                  "secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').keys[0].value]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "conf",
                  "mountPath": "/app/conf",
                  "readOnly": false
                },
                {
                  "name": "log",
                  "mountPath": "/app/log",
                  "readOnly": false
                }
              ]
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "[parameters('restartPolicy')]",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "port": "[parameters('port')]",
              "protocol": "TCP"
            }
          ]
        },
        "volumes": [
          {
            "name": "conf",
            "azureFile": {
              "shareName": "[parameters('confFileShareName')]",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').keys[0].value]",
              "readOnly": false
            }
          },
          {
            "name": "log",
            "azureFile": {
              "shareName": "[parameters('logFileShareName')]",
              "storageAccountName": "[parameters('storageAccountName')]",
              "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').keys[0].value]",
              "readOnly": false
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logSpaceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "containerIPv4Address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', parameters('name')), '2021-09-01').ipAddress.ip]"
    }
  }
}